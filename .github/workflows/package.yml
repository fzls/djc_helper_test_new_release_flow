name: Upload Release Asset

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: echo ${{ github.sha }} > Release.txt

      - name: Test
        run: cat Release.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            1. 测试新的release action
            2. 占位的测试changelog消息
          files: |
            Release.txt
            version.py
            utils/notices.txt

#      - name: Set up Python 3.8
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.8'
#
#      - name: Set time zone
#        uses: szenius/set-timezone@v1.0
#        with:
#          timezoneLinux: "Asia/Shanghai"
#          timezoneMacos: "Asia/Shanghai"
#          timezoneWindows: "China Standard Time"
#
#      - name: Get pip cache dir
#        id: pip-cache
#        run: |
#          echo "::set-output name=dir::$(pip cache dir)"
#
#      - name: pip cache
#        uses: actions/cache@v2
#        with:
#          path: ${{ steps.pip-cache.outputs.dir }}
#          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-
#
#      - name: Install Requirements
#        run: |
#          python -m pip install --upgrade pip setuptools wheel
#          pip install -r requirements.txt pyinstaller
#
#      - name: Build
#        run: |
#          python _build.py --disable_douban
#
#      - name: Clear Old Artifact
#        run: |
#          python _clear_github_artifact.py
#
#      - name: Package
#        run: |
#          python _package.py
#
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#
#      - name: Upload Release Asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
#          asset_path: ./releases/_github_action_artifact/djc_helper.7z
#          asset_name: djc_helper.7z
#          asset_content_type: application/7z
#
#      - name: Upload artifact
#        uses: actions/upload-artifact@v1.0.0
#        with:
#          name: "djc_helper.7z"
#          path: ./releases/_github_action_artifact/djc_helper.7z
